x <- seq(-15,15,0.1)
pdf_est <- dens(hermite_est,x)
cdf_est <- cum_prob(hermite_est,x)
p <- seq(0.05,1,0.05)
quantile_est <- quant(hermite_est,p)
x <- seq(-15,15,0.1)
pdf_est <- hermite_est %>% dens(x)
cdf_est <- hermite_est %>% cum_prob(x)
p <- seq(0.05,0.95,0.05)
quantile_est <- hermite_est %>% quant(p)
actual_pdf <- dlogis(x)
actual_cdf <- plogis(x)
df_pdf_cdf <- data.frame(x,pdf_est,cdf_est,actual_pdf,actual_cdf)
actual_quantiles <- qlogis(p)
df_quant <- data.frame(p,quantile_est,actual_quantiles)
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=pdf_est, colour="Estimated")) + geom_line(aes(y=actual_pdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Probability Density")
ggsave("pdf_static.png", width=2,height=2)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(10)
library(hermiter)
library(magrittr)
library(ggplot2)
library(dplyr)
library(data.table)
library(DT)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- update_batch(hermite_est,observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- hermite_est %>% update_batch(observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- update_sequential(hermite_est,observations[idx])
}
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- hermite_est %>% update_sequential(observations[idx])
}
x <- seq(-15,15,0.1)
pdf_est <- dens(hermite_est,x)
cdf_est <- cum_prob(hermite_est,x)
p <- seq(0.05,1,0.05)
quantile_est <- quant(hermite_est,p)
x <- seq(-15,15,0.1)
pdf_est <- hermite_est %>% dens(x)
cdf_est <- hermite_est %>% cum_prob(x)
p <- seq(0.05,0.95,0.05)
quantile_est <- hermite_est %>% quant(p)
actual_pdf <- dlogis(x)
actual_cdf <- plogis(x)
df_pdf_cdf <- data.frame(x,pdf_est,cdf_est,actual_pdf,actual_cdf)
actual_quantiles <- qlogis(p)
df_quant <- data.frame(p,quantile_est,actual_quantiles)
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=pdf_est, colour="Estimated")) + geom_line(aes(y=actual_pdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Probability Density")
ggsave("pdf_static.png", width=3,height=3)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(10)
library(hermiter)
library(magrittr)
library(ggplot2)
library(dplyr)
library(data.table)
library(DT)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- update_batch(hermite_est,observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- hermite_est %>% update_batch(observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- update_sequential(hermite_est,observations[idx])
}
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- hermite_est %>% update_sequential(observations[idx])
}
x <- seq(-15,15,0.1)
pdf_est <- dens(hermite_est,x)
cdf_est <- cum_prob(hermite_est,x)
p <- seq(0.05,1,0.05)
quantile_est <- quant(hermite_est,p)
x <- seq(-15,15,0.1)
pdf_est <- hermite_est %>% dens(x)
cdf_est <- hermite_est %>% cum_prob(x)
p <- seq(0.05,0.95,0.05)
quantile_est <- hermite_est %>% quant(p)
actual_pdf <- dlogis(x)
actual_cdf <- plogis(x)
df_pdf_cdf <- data.frame(x,pdf_est,cdf_est,actual_pdf,actual_cdf)
actual_quantiles <- qlogis(p)
df_quant <- data.frame(p,quantile_est,actual_quantiles)
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=pdf_est, colour="Estimated")) + geom_line(aes(y=actual_pdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Probability Density")
ggsave("pdf_static.png")
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=cdf_est, colour="Estimated")) + geom_line(aes(y=actual_cdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Cumulative Probability")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(10)
library(hermiter)
library(magrittr)
library(ggplot2)
library(dplyr)
library(data.table)
library(DT)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- update_batch(hermite_est,observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- hermite_est %>% update_batch(observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- update_sequential(hermite_est,observations[idx])
}
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- hermite_est %>% update_sequential(observations[idx])
}
x <- seq(-15,15,0.1)
pdf_est <- dens(hermite_est,x)
cdf_est <- cum_prob(hermite_est,x)
p <- seq(0.05,1,0.05)
quantile_est <- quant(hermite_est,p)
x <- seq(-15,15,0.1)
pdf_est <- hermite_est %>% dens(x)
cdf_est <- hermite_est %>% cum_prob(x)
p <- seq(0.05,0.95,0.05)
quantile_est <- hermite_est %>% quant(p)
actual_pdf <- dlogis(x)
actual_cdf <- plogis(x)
df_pdf_cdf <- data.frame(x,pdf_est,cdf_est,actual_pdf,actual_cdf)
actual_quantiles <- qlogis(p)
df_quant <- data.frame(p,quantile_est,actual_quantiles)
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=pdf_est, colour="Estimated")) + geom_line(aes(y=actual_pdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Probability Density")
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=cdf_est, colour="Estimated")) + geom_line(aes(y=actual_cdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Cumulative Probability")
ggsave("cdf_static.jpg")
ggsave("cdf_static.png")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(10)
library(hermiter)
library(magrittr)
library(ggplot2)
library(dplyr)
library(data.table)
library(DT)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- update_batch(hermite_est,observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
hermite_est <- hermite_est %>% update_batch(observations)
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- update_sequential(hermite_est,observations[idx])
}
observations <- rlogis(n=1000)
hermite_est <- hermite_estimator(N=10, standardize=TRUE)
for (idx in c(1:length(observations))) {
hermite_est <- hermite_est %>% update_sequential(observations[idx])
}
x <- seq(-15,15,0.1)
pdf_est <- dens(hermite_est,x)
cdf_est <- cum_prob(hermite_est,x)
p <- seq(0.05,1,0.05)
quantile_est <- quant(hermite_est,p)
x <- seq(-15,15,0.1)
pdf_est <- hermite_est %>% dens(x)
cdf_est <- hermite_est %>% cum_prob(x)
p <- seq(0.05,0.95,0.05)
quantile_est <- hermite_est %>% quant(p)
actual_pdf <- dlogis(x)
actual_cdf <- plogis(x)
df_pdf_cdf <- data.frame(x,pdf_est,cdf_est,actual_pdf,actual_cdf)
actual_quantiles <- qlogis(p)
df_quant <- data.frame(p,quantile_est,actual_quantiles)
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=pdf_est, colour="Estimated")) + geom_line(aes(y=actual_pdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Probability Density")
ggplot(df_pdf_cdf,aes(x=x)) + geom_line(aes(y=cdf_est, colour="Estimated")) + geom_line(aes(y=actual_cdf, colour="Actual")) +
scale_colour_manual("",
breaks = c("Estimated", "Actual"),
values = c("blue", "black")) + ylab("Cumulative Probability")
ggplot(df_quant,aes(x=actual_quantiles)) + geom_point(aes(y=quantile_est), color="blue") + geom_abline(slope=1,intercept = 0) +xlab("Theoretical Quantiles") + ylab("Estimated Quantiles")
ggsave("quantile_static.jpg")
ggsave("quantile_static.png")
devtools::document()
devtools::document()
library(hermiter)
help("hermiter")
devtools::document()
library(hermiter)
help("hermiter")
devtools::document()
devtools::build()
library(hermiter)
help("hermiter")
vignette("hermiter")
vignette("hermiter")
vignette("hermiter")
devtools::build(vignettes = T)
library(hermiter)
vignette("hermiter")
vignette(hermiter)
help("hermiter")
devtools::install()
library(hermiter)
help(hermiter)
vignette(hermiter)
vignette("hermiter")
devtools::build(vignettes = T)
devtools::install()
library(hermiter)
help("hermiter")
vignette("hermiter")
devtools::install(build_vignettes = T)
devtools::install(build_vignettes = T)
devtools::install(build_vignettes = T)
devtools::install(build_vignettes = T)
install.packages("ps")
devtools::install(build_vignettes = T)
library(hermiter)
vignette("hermiter")
help("hermiter")
devtools::document()
devtools::build(vignettes = T)
devtools::install(build_vignettes = T)
library(hermiter)
help("hermiter")
library(hermiter)
help("hermiter")
devtools::build(vignettes = T)
devtools::install(build_vignettes = T)
library(hermiter)
help(hermiter)
vignette("hermiter")
results <- rhub::check_for_cran()
devtools::test()
devtools::build(vignettes = T)
devtools::build(vignettes = T)
devtools::build(vignettes = T)
library(hermiter)
devtools::test()
devtools::build()
devtools::test()
seq_along(1:2)
seq_len(5)
seq_len(6)
seq_len(0)
for (i in c(1:0)) {
print(i)
}
for (i in seq_len(0)) {
print(i)
}
for (i in seq(2,0)) {
print(i)
}
seq_along(2:0)
seq_along(10:20)
devtools::test()
devtools::build()
seq(2,0,by=1)
?Reduce
devtools::test()
devtools::build()
devtools::build(vignettes = T)
devtools::install(build_vignettes = T)
library(hermiter)
vignette("hermiter")
devtools::test()
goodpractice::gp()
goodpractice::gp()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual(path = "C:\\git_repos\\")
devtools::build_manual(path = "C:\\git_repos\\")
devtools::build_manual(path = "C:\\git_repos\\")
goodpractice::gp()
devtools::test()
goodpractice::gp()
goodpractice::gp()
test_observations <- c(
0.3719336,
0.8484731,
-2.663014,
-2.028416,
-2.429764,
-1.677079,
1.434098,
-1.453405,
-1.133242,
0.963844,
1.46609,
0.371181,
2.135272,
-0.7328963,
0.8465673,
-2.168731,
-0.269106,
-1.885169,
-0.07963116,
0.1244462,
0.1165929,
1.460038,
-0.06261991,
0.07363522,
0.03415375,
-1.65761,
2.058115,
0.9413341,
-1.759675,
2.214421
)
x <- seq(-2, 2, by = 0.5)
hermite_est <-
hermite_estimator(N = 10,
standardize = FALSE,
exp_weight_lambda = 0.1, clipped=TRUE)
for (idx in seq_along(test_observations)) {
hermite_est <-
hermite_est %>% update_sequential(test_observations[idx])
}
pdf_vals <- hermite_est %>% dens(x)
target_pdf_vals_unstandardized_clipped <-
c(
0.2632709,
0.2498718,
1e-8,
0.1122043,
0.4209524,
0.2511466,
0.07670513,
0.1983007,
0.2352683
)
expect_equal(pdf_vals, target_pdf_vals_unstandardized_clipped, tolerance = 1e-07)
library(magrittr)
library(testthat)
hermite_est <-
hermite_estimator(N = 10,
standardize = FALSE,
exp_weight_lambda = 0.1, clipped=TRUE)
for (idx in seq_along(test_observations)) {
hermite_est <-
hermite_est %>% update_sequential(test_observations[idx])
}
pdf_vals <- hermite_est %>% dens(x)
target_pdf_vals_unstandardized_clipped <-
c(
0.2632709,
0.2498718,
1e-8,
0.1122043,
0.4209524,
0.2511466,
0.07670513,
0.1983007,
0.2352683
)
expect_equal(pdf_vals, target_pdf_vals_unstandardized_clipped, tolerance = 1e-07)
library(hermiter)
hermite_est <-
hermite_estimator(N = 10,
standardize = FALSE,
exp_weight_lambda = 0.1, clipped=TRUE)
for (idx in seq_along(test_observations)) {
hermite_est <-
hermite_est %>% update_sequential(test_observations[idx])
}
pdf_vals <- hermite_est %>% dens(x)
target_pdf_vals_unstandardized_clipped <-
c(
0.2632709,
0.2498718,
1e-8,
0.1122043,
0.4209524,
0.2511466,
0.07670513,
0.1983007,
0.2352683
)
expect_equal(pdf_vals, target_pdf_vals_unstandardized_clipped, tolerance = 1e-07)
hermite_est <-
hermite_estimator(N = 10,
standardize = FALSE,
exp_weight_lambda = 0.1)
for (idx in seq_along(test_observations)) {
hermite_est <-
hermite_est %>% update_sequential(test_observations[idx])
}
pdf_vals <- hermite_est %>% dens(x, clipped = TRUE)
target_pdf_vals_unstandardized_clipped <-
c(
0.2632709,
0.2498718,
1e-8,
0.1122043,
0.4209524,
0.2511466,
0.07670513,
0.1983007,
0.2352683
)
expect_equal(pdf_vals, target_pdf_vals_unstandardized_clipped, tolerance = 1e-07)
test_observations <- c(
0.3719336,
0.8484731,
-2.663014,
-2.028416,
-2.429764,
-1.677079,
1.434098,
-1.453405,
-1.133242,
0.963844,
1.46609,
0.371181,
2.135272,
-0.7328963,
0.8465673,
-2.168731,
-0.269106,
-1.885169,
-0.07963116,
0.1244462,
0.1165929,
1.460038,
-0.06261991,
0.07363522,
0.03415375,
-1.65761,
2.058115,
0.9413341,
-1.759675,
2.214421
)
hermite_est <-
hermite_estimator(N = 10, standardize = FALSE) %>%
update_batch(test_observations)
cdf_from_pdf <- stats::integrate(
f = function(x) {
hermite_est %>% dens(x)
},
lower = -Inf,
upper = 0.5
)$value
cdf_est <- hermite_est %>% cum_prob(0.5)
expect_equal(cdf_est, 0.6549575, tolerance = 1e-07)
expect_equal(cdf_from_pdf, cdf_est, tolerance = 1e-07)
cdf_est <- hermite_est %>% cum_prob(0.995)
cdf_est
cdf_est <- hermite_est %>% cum_prob(0)
cdf_est
cdf_est <- hermite_est %>% cum_prob(100)
cdf_est
cdf_est <- hermite_est %>% cum_prob(1-100)
cdf_est
cdf_est <- hermite_est %>% cum_prob(200)
cdf_est
cdf_est <- hermite_est %>% cum_prob(0.5, clipped=TRUE)
expect_equal(cdf_est, 0.6549575, tolerance = 1e-07)
cdf_est <- hermite_est %>% cum_prob(c(1:50))
cdf_est
cdf_est <- hermite_est %>% cum_prob(c(-3:3))
cdf_est
cdf_est <- hermite_est %>% cum_prob(3, clipped=TRUE)
expect_equal(cdf_est, 1, tolerance = 1e-07)
devtools::test()
devtools::test_coverage()
