useDynLib("hermiter", .registration=TRUE)
importFrom(Rcpp, evalCpp)
importFrom("methods", "is")
S3method(combine_hermite,list)
S3method(combine_pair,hermite_estimator_univar)
S3method(cum_prob,hermite_estimator_univar)
S3method(dens,hermite_estimator_univar)
S3method(quant,hermite_estimator_univar)
S3method(calculate_running_std,hermite_estimator_univar)
S3method(calculate_running_std,hermite_estimator_bivar)
S3method(update_batch,hermite_estimator_univar)
S3method(update_sequential,hermite_estimator_univar)
S3method(spearmans,hermite_estimator_bivar)
S3method(cum_prob,hermite_estimator_bivar)
S3method(dens,hermite_estimator_bivar)
S3method(update_batch,hermite_estimator_bivar)
S3method(update_sequential,hermite_estimator_bivar)
S3method(combine_pair,hermite_estimator_bivar)
export(combine_hermite)
export(combine_pair)
export(cum_prob)
export(dens)
export(spearmans)
export(hermite_estimator)
export(hermite_polynomial)
export(hermite_function)
export(hermite_integral_val)
export(hermite_integral_val_quantile_adap)
export(hermite_normalization)
export(quant)
export(standardizeInputs)
export(standardizeInputsEW)
export(update_batch)
export(update_sequential)
export(hermite_function_N)
export(hermite_int_lower)
export(hermite_int_upper)
export(hermite_int_full_domain)
export(gauss_hermite_quad_100)